<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAAABADoAgAAJgAAACAgAAAAAAgAqAgAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAAAC
        AAAAAAAAAAAAABAAAAAQAAAAAwMDACl7KQBHdDkAI1JaAF5cWQDjciIAQbU/AO6TKwAUR9QAhHOEABGF
        4gCloKAA1bSnAKnypADyyKwA7+jkAAAAAAAAAAAAAAAAAAAAAAAAAAD/////////////AAAAAAAA////
        /////////wAAAAAAAP////////////AAAAAAAADP///////////wAAAAAM//z///////////z//wAAD/
        /8///////////7///AAL//tJ//////////xJ//8ADP/7NJmZmZmZmZmUNP//AAzM+zMzMzMzMzMzMzn8
        zwAMzMy7vMzMzMzMzMu8zMwADMzMzu7u7u7u7u7uzMzMAAzM//xVVVVVVVVVV//8zAAM///8dVVVVVVV
        VVX///8AD////Hd3d3d3d3d3////AA////yrzMzMzMzHmv///wAP///8q////////pr/zv8ADP///6v/
        //////6a/7v/AAD///+r///////+mv/+/AAAD///q////////pr///AAAAAM/6n///////6a/AAAAAAA
        AACp///////+mgAAAAAAAAAAqf///////poAAAAAAAAAAKn///////6aAAAAAAAAAACp///////+mgAA
        AAAAAAAAqf///////5oAAAAAAAAAAKn///////+aAAAAAAAAAACp///////+mgAAAAAAAAAAqrkiIiIi
        SZoAAAAAAAAAAKqjZmZmYTqqAAAAAAAAAACqqmZmZmGqqgAAAAAAAAAAqIg93d3TiIoAAAAA//////wA
        AD/8AAA//AAAf/wAAH/AAAAHwAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AA
        AAOAAAADwAAAA+AAAAf4AAA//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8A
        AP8oAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAABAAAAAQAAAAAAAP9jAAD/awAA/3MAAP97
        AAD/jAAA/5QAAAgICAD/awgA73MIAP9zCAAYlAgAEBAQAP9zEAAYGBgAIRgYACGtGAAhtRgAISEhACkh
        IQD/jCEAKSkpADEpKQApeykA94QpADmtKQAxMTEA1owxADk5OQBCQjkASms5AEJzOQBKczkAQns5ADmE
        OQBCjDkA/605ABhCQgBCQkIASkJCAEpKSgBSSkoAc3NKAFKcUgAYWloAWlpaAHOcWgD3tVoAWt5aAGNj
        YwDWe2MAtYRjAGPeYwBra2sAc2trADlacwB7a3MAnGtzAHNzcwB7c3MAnHNzAL2UcwDvpXMAe85zAIRz
        ewB7e3sAhHt7AJx7ewAphHsA3px7AOecewCltXsAhHOEAISEhACMhIQA55yEAOelhADerYQA97WEAP+1
        hACc3oQAc4SMAHOMjAB7jIwAjIyMAJSMjACcjIwAjJSMAJSUjACclIwA56WMAOetjAD3tYwArb2MAPe9
        jACMlJQAlJSUAJyUlADnrZQAzrWUAPe9lABKc5wAjJScAJycnAClnJwArZycAOe1nAD3xpwApaWlAK2l
        pQD3xqUAQoStALWtrQC9ra0Axq2tAL21rQDvxq0A98atAPfOrQCt960AIXO1AL2ttQC9tbUAxrW1AM61
        tQDnxrUA78a1APfOtQD/zrUArfe1AL21vQC9vb0Axr29AM69vQDWvb0A58a9AM7OvQD/1r0Avb3GAMbG
        xgDOxsYA1sbGAN7GxgDWzsYA1tbGAPfexgD/3sYACCnOACF7zgDWzs4A3s7OAPfezgD/3s4A/+fOAP/v
        zgAIKdYA1tbWAN7W1gDn1tYA597WAP/v1gDe3t4A597eAO/e3gDn594A7+feAP/v3gD/994ACITnAN7e
        5wDn3ucA797nAOfn5wDv5+cA5+/nAO/v5wD/9+cACIzvAN7e7wDn5+8A7+fvAO/v7wD37+8A7/fvAP/3
        7wAIOfcAGIT3ABiM9wDv7/cA9/f3AP/39wD///cACDn/AACM/wAYjP8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAra2traysoqKioqKhoZ2dnZ2cnJUAAAAAAAAAAAAAAADDw8PD
        w76+vr29vb29vba2trbDoQAAAAAAAAAAAAAAALbDvb22trWtra2trayioqKinsMAAAAAAAAAAAAAAAAA
        jcO9vb22trW1ta2tra2soqKtrAAAAAAAAAAAAIytra2MvcO9vb22tra2ta2tra2tor6ElratogAAAAAA
        tq2trIyhvbW1tbWtra2srKKioqKitXChray2gwAAAG2inaJsLUqhnJycnJyclZWVlZWVlZyDLUGdnp6d
        AAAAep2WnmccKElUVFRUVFRUVFRUVFRUVDEcNZaWlpYAAAB7jY2WaCYmHBwcHBwcHBwcHBwcHBwcJhw2
        lY2NlgAAAHuFhYV7cHBweXmCgoKCgoKCgoJ6eXlwcHGFhYWNAAAAe3t7cnuFjn10dGtkXE5OTlxka250
        fY6NfHJye4UAAABxcoWVorM+DQ0IAgIBAQEBAQECAgoNGJ6znY17ewAAAI2ttbW1s00UAwQEBAQEBAQE
        BAQEBAQJnby1tayeAAAAtb62raysYy8kBgUFBQUFBQUFBQUFBRupraKirLYAAACsvbW1raxzqGZFamJi
        W1paTEtFRTJIqKmiqqKirQAAAJ22tbW1toSoVpG4sLCnpqagoJmabjmoqp2Ij6KiAAAAhLatra22lahW
        kbiwpqamoKCZmZluOaiinV1HnZ0AAAAAtq2tra2hqFmRuLCwsKamoKCZmW45qJ2VlY+ihAAAAAAAlbat
        rayoWZe+uLiwsKamoKCgdTyora22tqIAAAAAAAAAAISVrKhVl7++vriwsKamoKB1PKidegAAAAAAAAAA
        AAAAAAAAqFWXw7++vriwsKampnY8qAAAAAAAAAAAAAAAAAAAAACoVZfDw7++vriwsKamdjyoAAAAAAAA
        AAAAAAAAAAAAAKhVl8PDw7++vri4sLB/PKgAAAAAAAAAAAAAAAAAAAAAqFSXw8PDw7++vr64uH88qAAA
        AAAAAAAAAAAAAAAAAACoU5jDw8PDw7++vri+kUOoAAAAAAAAAAAAAAAAAAAAAKhSmMPDw8PDw7++vr6X
        QKgAAAAAAAAAAAAAAAAAAAAAqFGSr6SkpKSkpKSkr4k4qAAAAAAAAAAAAAAAAAAAAACobz0uIyIhISAg
        IB4qM2WoAAAAAAAAAAAAAAAAAAAAAKjBqEQZEBAQEBARCyyowagAAAAAAAAAAAAAAAAAAAAAqMLClCs0
        MDAwMDAXeLu6qAAAAAAAAAAAAAAAAAAAAACoubm5N1B3d3d3PyWbk5OoAAAAAAAAAAD//////AAAP/wA
        AD/8AAB//AAAf8AAAAfAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AAAAOAAAADgAAAA4AA
        AAPAAAAD4AAAB/gAAD//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA/w==
</value>
  </data>
</root>